{"version":3,"sources":["Components/List.jsx","Components/Input.jsx","App.js","index.js"],"names":["List","props","className","text","Button","id","type","onClick","onSelect","aria-hidden","Input","useState","item","setItem","listItem","setListItem","deleteItem","oldItems","filter","arrElem","index","placeholder","onChange","e","target","value","preventDefault","map","itemVal","App","ReactDOM","render","document","getElementById"],"mappings":"mRAuBeA,EAnBF,SAACC,GAEV,OACI,mCACA,sBAAKC,UAAU,OAAf,UAEI,6BAAKD,EAAME,OAEX,cAACC,EAAA,EAAD,CAAQC,GAAG,eAAeC,KAAK,SAASC,QAAS,WAE7C,OAAON,EAAMO,SAASP,EAAMI,KAFhC,SAIA,mBAAGA,GAAG,OAAOH,UAAU,cAAcO,cAAY,iBCyE9CC,EApFD,WAKV,MAAuBC,mBAAS,IAAhC,mBAAOC,EAAP,KAAYC,EAAZ,KACA,EAAgCF,mBAAS,IAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KA8BMC,EAAa,SAACX,GAGhBU,GAAY,SAACE,GAGT,OAAOA,EAASC,QAAO,SAACC,EAASC,GAE7B,OAAOA,IAASf,SAI5B,OAEA,aADA,CACA,OAAKH,UAAU,QAAf,SAEI,iCACI,uBAAOI,KAAK,OAAOe,YAAY,kBAAkBnB,UAAU,YAAYoB,SA5C/D,SAACC,GACbV,EAAQU,EAAEC,OAAOC,QA2C6EA,MAAOb,IAEjG,wBAAQP,GAAG,YAAYE,QAzCf,SAACgB,GAGD,KAATX,IAIHW,EAAEG,iBAGFX,GAAY,SAACE,GAGT,MAAM,GAAN,mBAAWA,GAAX,CAAoBL,OAKxBC,EAAQ,MAuBqCP,KAAK,SAASJ,UAAU,mBAAjE,iBAKA,6BAGCY,EAASa,KAAI,SAACC,EAAQR,GAGvB,OAAO,cAAC,EAAD,CAEPjB,KAAQyB,EACRvB,GAAMe,EACNZ,SAAUQ,GAHLI,cCzDFS,MAXf,WACE,OACE,sBAAK3B,UAAU,QAAf,UACA,6BAAI,2DACJ,qBAAKA,UAAU,eAAf,SACA,cAAC,EAAD,UCJJ4B,IAASC,OAEP,cAAC,EAAD,IAEAC,SAASC,eAAe,W","file":"static/js/main.5124197a.chunk.js","sourcesContent":["import React from 'react'\r\nimport Button from 'react-bootstrap/Button'\r\nimport './List.css'\r\n\r\nconst List = (props)=>{\r\n\r\n    return(\r\n        <>\r\n        <div className='list'>\r\n            \r\n            <li>{props.text}</li>\r\n            {/* on clicking the delete button the deleteItem function is called passing id as the argument */ }\r\n            <Button id='deleteButton' type='button' onClick={()=>{\r\n\r\n                return props.onSelect(props.id)\r\n            }}>\r\n            <i id='icon' className=\"fa fa-trash\" aria-hidden='true' />\r\n            </Button>\r\n        </div> \r\n        </> \r\n    )\r\n};\r\n\r\nexport default List;","import React, { useState } from 'react'\r\nimport './Input.css'\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport List from './List'\r\n\r\nconst Input = ()=>{\r\n\r\n    /* Below are the two hooks used to accomplish the TODOs list */\r\n    /* item stores the value of the current item that the user typed in the input box. setItem is responsible for changing the state of item as the input changes */\r\n    /* listItem is the actual array of items that are there in the TODOs list. Hence it's initially empty*/\r\n    const [item,setItem] = useState('');\r\n    const [listItem ,setListItem] = useState([]);\r\n\r\n    /* function to keep changing the state of item. We use it with onChange in input box, so actually stores the final val of current input */\r\n    const newItem = (e)=>{\r\n        setItem(e.target.value)\r\n    }\r\n\r\n    //* function used to add an item to the list upon clicking the add button *//\r\n    const addItem = (e)=>{\r\n\r\n        /* if the button is clicked without entering input return */\r\n        if(item === '')\r\n        return\r\n\r\n        /* for preventing the form to get submitted and hence avoiding the page from getting refreshed */\r\n        e.preventDefault();\r\n\r\n        /* changing the state of the array of items */\r\n        setListItem((oldItems)=>{\r\n            \r\n            /* ...oldItems is a way to write all the the previous array items. [...oldItems,item] is old array with newly added item */\r\n            return [...oldItems,item]\r\n            \r\n        });\r\n\r\n        /* after modifying the list clear the text in input box */\r\n        setItem('')\r\n    }\r\n\r\n    //* function to delete an item upon clicking the delete button. id is the index of the item that has to be deleted *//\r\n    const deleteItem = (id)=>{\r\n\r\n        /* modifying the list */\r\n        setListItem((oldItems)=>{\r\n\r\n            /* applying filter function to filter the elements whose index isn't equal to id */ \r\n            return oldItems.filter((arrElem, index)=>{\r\n                \r\n                return index!== id;\r\n            })\r\n        })\r\n    }\r\n    return(\r\n    /* actual input box, add button, further having List component comprising of the list of the elements along with delete button */    \r\n    <div className='input'>\r\n\r\n        <form>\r\n            <input type='text' placeholder='Enter your item' className='todoInput' onChange={newItem} value={item}></input>\r\n    \r\n            <button id='addButton' onClick={addItem} type=\"button\" className=\"btn btn-primary \">\r\n            Add\r\n            </button>\r\n\r\n    \r\n            <ol>\r\n\r\n            {/* traversing through the array listItem in order to fetch each of it's elements */ }\r\n            {listItem.map((itemVal,index)=>{\r\n            \r\n            /* calling the List component*/\r\n            return <List\r\n            key={index} \r\n            text = {itemVal}\r\n            id = {index}\r\n            onSelect={deleteItem}\r\n            />\r\n            \r\n            })}\r\n\r\n            </ol>\r\n\r\n        </form>\r\n  \r\n    </div>\r\n\r\n    )\r\n};\r\n\r\nexport default Input;\r\n\r\n","\nimport './App.css';\nimport Input from './Components/Input'\n\nfunction App() {\n  return (\n    <div className='myApp'>\n    <h1><strong>Sakshi's TODOs List</strong></h1>\n    <div className='myAppContent'>\n    <Input />\n    </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n\n  <App />\n,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}